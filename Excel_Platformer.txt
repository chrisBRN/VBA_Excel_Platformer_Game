Option Explicit

Public Sub main()

    Call set_up_main_sheet("Game")
    Call set_up_window_size_and_position(1, 1, 480, 320)
    Call display_window_features(False)
    
End Sub

Sub set_up_main_sheet(gameSheetName As String)

    gameSheetName = "Game"
    
    Call add_sheet_named(gameSheetName)
    Dim gameSheet As Worksheet
    Set gameSheet = Worksheets(gameSheetName)
    delete_sheets_not_named (gameSheetName)
        
    'resize the rows and columns (4 pixels)
    Worksheets(gameSheetName).Cells.ColumnWidth = 0.33
    Worksheets(gameSheetName).Cells.RowHeight = 3
    
    
    
    'ActiveWindow.PointsToScreenPixelsX (Columns(1).width)
    
    
End Sub


Sub set_up_window_size_and_position(startXPosition As Integer, startYPosition As Integer, desiredWidth As Integer, desiredHeight As Integer)

    With Application
        .WindowState = xlMaximized
        
        If desiredWidth > Application.width - startXPosition Then
            desiredWidth = Application.width - startXPosition
        End If
        
        If desiredHeight > Application.Height - startYPosition Then
            desiredHeight = Application.Height - startYPosition
        End If

        .WindowState = xlNormal
    End With
    
    With Application
        .Top = startYPosition
        .Left = startXPosition
        .width = desiredWidth
        .Height = desiredHeight
    End With

End Sub

Function sheet_exists(shName As String) As Boolean
' checks all sheets for the existance of given sheet and returns true/false

    Dim i As Integer
    For i = 1 To Worksheets.Count
        If Worksheets(i).Name = shName Then
            sheet_exists = True
            Exit For
        End If
    Next i

End Function

Function add_sheet_named(shName As String) As Worksheet

    Application.DisplayAlerts = False

    Dim exists As Boolean
    exists = sheet_exists(shName)

    Dim sh As Worksheet
    If Not exists Then
        Set sh = Worksheets.Add
        sh.Name = shName
    Else
        ' If the sheet already exits we should delete it before creating a new one
        Set sh = Worksheets.Add
        sh.Name = "Temp" ' Prevent cannot delete lastsheet error
        Worksheets(shName).Delete
        sh.Name = shName
    End If

    Application.DisplayAlerts = True

End Function

Sub delete_sheets_not_named(shName As String)

    Application.DisplayAlerts = False

    Dim sh As Worksheet
    On Error Resume Next
    ' Error will trigger if there is no sheet named shName,
    ' However this should only be possible if the preceding sub "add_sheet_named" hasn't been called or has stalled/errored itself
    For Each sh In Worksheets
        If sh.Name <> shName Then sh.Delete
    Next
    
    Application.DisplayAlerts = True

End Sub

Sub display_window_features(display As Boolean)
    
    ' Hides/shows formula bar, scroll bars, status bar & ribbon
    With Application
        .ExecuteExcel4Macro "show.toolbar(""Ribbon""," + CStr(display) + ")"
        .DisplayFormulaBar = display
        .DisplayScrollBars = display
        .DisplayStatusBar = display
        .DisplayFullScreen = display
    End With
    
    ' Hides/shows gridlines & headings
    ActiveWindow.DisplayGridlines = display
    ActiveWindow.DisplayHeadings = display

End Sub
